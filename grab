#!/bin/env bash

VER="0.2.7"

GR="\033[0;36m"
RD="\033[0;31m"
YL="\033[0;33m"
OF="\033[0m"

function msg {
    echo -e "$GR${1}$OF"
}

function warn {
    echo -e "$YL${1}$OF"
}

function err {
    echo -e "$RD${1}$OF"
}

msg "\nGRAB‚úäversion ${VER}"
msg "platform: ${OSTYPE}"

command -v wget >/dev/null 2>&1 || { err "wget not installed"; exit 1;} 
command -v unzip >/dev/null 2>&1 || { err "unzip not installed"; exit 1;} 
command -v tar >/dev/null 2>&1 || { err "tar not installed"; exit 1;} 
command -v curl >/dev/null 2>&1 || { err "curl not installed"; exit 1;} 

[ -z $1 ] && { err "1st arggument must be a github address in the format: user/repo"; exit 1; }

u="${1}"        # url
p="${1##*/}"    # project name

if [ -z $2 ]; then
    ex=${1##*/}
    warn "2rd arggument (executable name) missing, assuming it is: ${ex}"
    e="${ex}"
else
    e="${2}"
fi

# grab list of released files from github
lst=$(curl -s "https://api.github.com/repos/${u}/releases/latest" \
    | grep "browser_download_url" | cut -d '"' -f 4 | xargs -n1 basename \
    | grep ${p} | grep -E 'zip$|gz$')

[ $? -ne 0 ] && { err "unable to find eligible files in the latest release of this repository"; exit 1; }

echo -e "\nüëâ Choose the version you would like to install:\n"
select choice in ${lst}; do
    if [[ -n $choice ]]; then
        a="${choice}"
        msg "\nYou chose to install ${a}"
        break
    else
        err "Invalid choice, try again"
    fi
done


tmpf="/tmp/grab_cache_$$"
msg "Creating cache in ${tmpf}"
mkdir "${tmpf}"

[ -d "${tmpf}" ] || { err "failed to create cache folder ${tmpf}"; exit 1; }

cd ${tmpf}

msg "Downloading ${a} from github.com/${u}" 
wget -qN "https://github.com/${u}/releases/latest/download/${a}"
[ $? -ne 0 ] && { err "unable to download https://github.com/${u}/releases/latest/download/${a}"; exit 1; }

[ -f ${a} ] || { err "file ${a} not found"; rm -rf ${tmpf}; exit 1; }

ext="${a##*.}"
msg "Archive type is ${ext}"

msg "Extracting ${e} from ${a} into ${tmpf}"

if [ $ext == "zip" ]; then
    unzip -oq ${a}
elif [ $ext == "gz" ]; then
    tar -xzf ${a}
    [ -f ${e} ] || { warn "Unable to find ${e}, flattening 1 level..."; tar -xzf ${a} --strip-components 1; }
    [ -f ${e} ] || { warn "Unable to find ${e}, flattening 2 levels..."; tar -xzf ${a} --strip-components 2; }
    [ -f ${e} ] || { warn "Unable to find ${e}, flattening 3 levels..."; tar -xzf ${a} --strip-components 3; }
    [ -f ${e} ] || { err "Unable to find ${e}, giving up."; rm -rf ${tmpf}; exit 1; }
else
    err "Unable to extract from ${ext}"
    rm -rf ${tmpf}
fi

[ $? -ne 0 ] && { err "Unable to unzip ${a}"; rm -rf ${tmpf}; exit 1; }

msg "Making ${e} executable..."
chmod +x ${e} 

[ $? -ne 0 ] && { err "Unable to make ${e} executable"; rm -rf ${tmpf}; exit 1; }

msg "Installing ${e} to /usr/local/bin..."
sudo mv ${e} /usr/local/bin

[ -f /usr/local/bin/${e} ] || { err "failed to install ${e}"; rm -rf ${tmpf}; exit 1; }

msg "Successfully installed!\n"

warn "To uninstall: rm -f /usr/local/bin/${e}"

msg "\nDeleting ${tmpf} and cleaning up..."
rm -rf ${tmpf}

[ -d "${tmpf}" ] && { err "Failed to delete cache folder ${tmpf}"; exit 1; }

msg "done üëç\n"


